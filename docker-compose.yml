# db for local dev
version: '3.9'

services:
  postgresql:
    image: postgres:12.9-alpine # matches version used on aws environments
    container_name: pg-devices-api
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dimo
      - POSTGRES_PASSWORD=dimo
      - POSTGRES_DB=devices_api
    volumes:
      - postgresdb:/var/lib/postgresql/data:delegated
    profiles: ["core"]
  redis:
    image: redis:6.2 # latest version on ElastiCache
    container_name: redis-devices-api
    ports:
      - "6379:6379"
    volumes:
      - redis:/data:delegated
    profiles: ["core"]

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic
  kib01:
    image: docker.elastic.co/kibana/kibana:7.16.3
    container_name: kib01
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
    networks:
      - elastic

  localstack:
    image: localstack/localstack:latest
    environment: 
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - SERVICES=lambda,s3
    ports: 
      - '4566-4583:4566-4583'
    volumes: 
      - "${TEMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  ipfs:
    image: ipfs/go-ipfs:latest
    environment:
      - IPFS_PROFILE=server
      - IPFS_PATH=/ipfsdata
    volumes:
      - ./data/ipfs:/ipfsdata
    ports:
      - "4001:4001"
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8081:8081"
      - "127.0.0.1:5001:5001"
volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  postgresdb:
    driver: local
  redis:
    driver: local

networks:
  elastic:
    driver: bridge
## issue with ports, could not get app to connect to kafka, using brew services instead
#  kafka:
#    container_name: devices-api-kafka
#    image: johnnypark/kafka-zookeeper
#    ports:
#      - "9092:9092"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
#      ADVERTISED_HOST: 127.0.0.1
#      NUM_PARTITIONS: 5
#      TOPICS: "topic.interface.ingest.smartcar, topic.device.status"

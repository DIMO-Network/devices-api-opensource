// Code generated by MockGen. DO NOT EDIT.
// Source: autopi_task_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	services "github.com/DIMO-Network/devices-api/internal/services"
	gomock "github.com/golang/mock/gomock"
)

// MockAutoPiTaskService is a mock of AutoPiTaskService interface.
type MockAutoPiTaskService struct {
	ctrl     *gomock.Controller
	recorder *MockAutoPiTaskServiceMockRecorder
}

// MockAutoPiTaskServiceMockRecorder is the mock recorder for MockAutoPiTaskService.
type MockAutoPiTaskServiceMockRecorder struct {
	mock *MockAutoPiTaskService
}

// NewMockAutoPiTaskService creates a new mock instance.
func NewMockAutoPiTaskService(ctrl *gomock.Controller) *MockAutoPiTaskService {
	mock := &MockAutoPiTaskService{ctrl: ctrl}
	mock.recorder = &MockAutoPiTaskServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAutoPiTaskService) EXPECT() *MockAutoPiTaskServiceMockRecorder {
	return m.recorder
}

// GetTaskStatus mocks base method.
func (m *MockAutoPiTaskService) GetTaskStatus(ctx context.Context, taskID string) (services.AutoPiTask, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskStatus", ctx, taskID)
	ret0, _ := ret[0].(services.AutoPiTask)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskStatus indicates an expected call of GetTaskStatus.
func (mr *MockAutoPiTaskServiceMockRecorder) GetTaskStatus(ctx, taskID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskStatus", reflect.TypeOf((*MockAutoPiTaskService)(nil).GetTaskStatus), ctx, taskID)
}

// StartAutoPiUpdate mocks base method.
func (m *MockAutoPiTaskService) StartAutoPiUpdate(ctx context.Context, deviceID, userID, unitID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartAutoPiUpdate", ctx, deviceID, userID, unitID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartAutoPiUpdate indicates an expected call of StartAutoPiUpdate.
func (mr *MockAutoPiTaskServiceMockRecorder) StartAutoPiUpdate(ctx, deviceID, userID, unitID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartAutoPiUpdate", reflect.TypeOf((*MockAutoPiTaskService)(nil).StartAutoPiUpdate), ctx, deviceID, userID, unitID)
}
